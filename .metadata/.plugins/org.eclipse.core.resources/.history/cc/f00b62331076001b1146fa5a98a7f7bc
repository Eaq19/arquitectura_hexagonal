package com.example.bddspringboot.bus;

import java.util.UUID;

import org.apache.kafka.clients.admin.NewTopic;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.core.annotation.Order;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Component;

import com.example.bddspringboot.modelo.EventoClienteCreado;

@Component
public class kafkaProducer {

	@Value("${spring.kafka.replication.factor:1}")
	private int replicationFactor;
	
	@Value("${spring.kafka.partition.number:1}")
	private int partitionNumber;
	
	@Autowired
	private KafkaTemplate<UUID, EventoClienteCreado> kafkaTemplate;
	
	public void writeToKakfka(EventoClienteCreado evento) {
		kafkaTemplate.send(EventoClienteCreado.TOPIC, evento.id, evento);
	}
	
	@Bean
	@Order(-1)
	public NewTopic createNewTopic() {
		return new NewTopic(EventoClienteCreado.TOPIC, partitionNumber, (short) replicationFactor);
	}
}
